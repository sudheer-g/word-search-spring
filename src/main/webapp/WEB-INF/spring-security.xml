<?xml version="1.0" encoding="UTF-8"?>

<!--
- Sample namespace-based configuration
-
-->

<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="
                    http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/security
                    http://www.springframework.org/schema/security/spring-security.xsd">

    <debug/>

    <global-method-security pre-post-annotations="enabled"/>

    <http>
        <intercept-url pattern="/services/*" access="authenticated"/>
        <!--
            Allow all other requests. In a real application you should
            adopt a whitelisting approach where access is not allowed by default
        -->
        <intercept-url pattern="/**" access="permitAll"/>
        <form-login
                default-target-url="/services/wordSearch"/>
        <logout logout-success-url="/login" delete-cookies="JSESSIONID"/>
        <remember-me/>

        <session-management invalid-session-url="/login">
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>
        </session-management>

    </http>

    <!--
    Usernames/Passwords are
        rod/koala
        dianne/emu
        scott/wombat
        peter/opal
    -->
    <beans:bean id="encoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder" factory-method = "getInstance" />

    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="encoder"/>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="select users.username, users.password, users.enabled from users WHERE users.username = ?"
                               authorities-by-username-query="select u.username, ur.authority from users u, users_roles ur where u.user_id = ur.user_id and u.username = ? " />
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="dataSource"
                class="org.apache.commons.dbcp2.BasicDataSource">
        <beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <beans:property name="url"
                        value="jdbc:mysql://localhost:3306/wordSearch?autoReconnect=true&amp;useSSL=false" />
        <beans:property name="username" value="root" />
        <beans:property name="password" value="123" />
    </beans:bean>

</beans:beans>
